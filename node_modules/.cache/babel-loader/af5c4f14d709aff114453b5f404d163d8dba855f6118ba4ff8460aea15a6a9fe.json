{"ast":null,"code":"var _jsxFileName = \"/Users/nikitastankovic/Desktop/Yandex.practicum/dev/stellar-burgers/src/components/app/app.jsx\",\n  _s = $RefreshSig$();\nimport styles from \"./app.module.css\";\nimport { data } from \"../../utils/data\";\nimport AppHeader from \"../AppHeader/AppHeader\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Стейт для хранения данных об ингредиентах\n  const [ingredients, setIngredients] = useState([]);\n\n  // Функция для загрузки данных об ингредиентах\n  const fetchIngredients = async () => {\n    try {\n      const response = await fetch('https://norma.nomoreparties.space/api/ingredients');\n      if (response.ok) {\n        const data = await response.json();\n        setIngredients(data);\n      } else {\n        // Обработка ошибки при получении данных\n        console.error('Ошибка при загрузке данных');\n      }\n    } catch (error) {\n      // Обработка сетевых ошибок\n      console.error('Ошибка при выполнении запроса', error);\n    }\n  };\n\n  // Вызываем функцию загрузки данных при монтировании компонента\n  useEffect(() => {\n    fetchIngredients();\n  }, []);\n\n  // Далее вы можете использовать данные в компонентах BurgerConstructor и BurgerIngredients\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.app,\n      children: /*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(BurgerConstructor, {\n        ingredients: ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(BurgerIngredients, {\n        ingredients: ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uMtY1mJVgguGfhq6h4p5o8ejUzk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["styles","data","AppHeader","React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","ingredients","setIngredients","fetchIngredients","response","fetch","ok","json","console","error","className","children","app","fileName","_jsxFileName","lineNumber","columnNumber","BurgerConstructor","BurgerIngredients","_c","$RefreshReg$"],"sources":["/Users/nikitastankovic/Desktop/Yandex.practicum/dev/stellar-burgers/src/components/app/app.jsx"],"sourcesContent":["import styles from \"./app.module.css\";\nimport { data } from \"../../utils/data\";\nimport AppHeader from \"../AppHeader/AppHeader\"\n\n\n\n\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  // Стейт для хранения данных об ингредиентах\n  const [ingredients, setIngredients] = useState([]);\n\n  // Функция для загрузки данных об ингредиентах\n  const fetchIngredients = async () => {\n    try {\n      const response = await fetch('https://norma.nomoreparties.space/api/ingredients');\n      if (response.ok) {\n        const data = await response.json();\n        setIngredients(data);\n      } else {\n        // Обработка ошибки при получении данных\n        console.error('Ошибка при загрузке данных');\n      }\n    } catch (error) {\n      // Обработка сетевых ошибок\n      console.error('Ошибка при выполнении запроса', error);\n    }\n  };\n\n  // Вызываем функцию загрузки данных при монтировании компонента\n  useEffect(() => {\n    fetchIngredients();\n  }, []);\n\n  // Далее вы можете использовать данные в компонентах BurgerConstructor и BurgerIngredients\n\n  return (\n    <div className=\"app\">\n      <div className={styles.app}>\n      <AppHeader/>\n    </div>\n    <div>\n    <BurgerConstructor ingredients={ingredients} />\n    <BurgerIngredients ingredients={ingredients} />\n    </div>\n    \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,kBAAkB;AACrC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,SAAS,MAAM,wBAAwB;AAK9C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmD,CAAC;MACjF,IAAID,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMd,IAAI,GAAG,MAAMY,QAAQ,CAACG,IAAI,EAAE;QAClCL,cAAc,CAACV,IAAI,CAAC;MACtB,CAAC,MAAM;QACL;QACAgB,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;MAC7C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACd;MACAD,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;;EAED;EACAb,SAAS,CAAC,MAAM;IACdO,gBAAgB,EAAE;EACpB,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,oBACEL,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA;MAAKY,SAAS,EAAEnB,MAAM,CAACqB,GAAI;MAAAD,QAAA,eAC3Bb,OAAA,CAACL,SAAS;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACR,eACNlB,OAAA;MAAAa,QAAA,gBACAb,OAAA,CAACmB,iBAAiB;QAAChB,WAAW,EAAEA;MAAY;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC/ClB,OAAA,CAACoB,iBAAiB;QAACjB,WAAW,EAAEA;MAAY;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEA;AAEV;AAAChB,EAAA,CAxCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}