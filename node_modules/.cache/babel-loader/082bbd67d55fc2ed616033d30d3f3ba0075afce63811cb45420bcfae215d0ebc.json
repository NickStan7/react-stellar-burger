{"ast":null,"code":"var _jsxFileName = \"/Users/nikitastankovic/Desktop/Yandex.practicum/dev/stellar-burgers/src/components/app/app.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\"; // Импортируем PropTypes\nimport styles from \"./app.module.css\";\nimport axios from \"axios\";\nimport AppHeader from \"../AppHeader/AppHeader\";\nimport BurgerIngredients from \"../BurgerIngredients/BurgerIngredients\";\nimport BurgerConstructor from \"../BurgerConstructor/BurgerConstructor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const apiUrl = \"https://norma.nomoreparties.space/api/ingredients\";\n  function checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    // если ошибка, отклоняем промис\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  useEffect(() => {\n    const config = {\n      method: \"get\",\n      url: apiUrl,\n      headers: {}\n    };\n    axios(config).then(function (response) {\n      var _response$data;\n      const data = JSON.parse(JSON.stringify(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data));\n      return data !== null && data !== void 0 ? data : [];\n    }).then(data => {\n      // Выполните операции с данными здесь\n      setData(data);\n\n      // Затем вызовите checkResponse для проверки успешности выполнения запроса\n      return checkResponse();\n    }).catch(function (error) {\n      console.log(error);\n      // Если требуется дополнительная обработка ошибки, добавьте её здесь\n    });\n  }, []);\n\n  //Стоит добавить проверку успешности выполнения с помощью res.ok так как catch ловит\n  //только ошибки в самом запросе, но если сервер вернет к примеру 400, то ее catch не поймает.\n  //Теперь код более корректно обрабатывает успешное выполнение запроса и ошибки.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(BurgerIngredients, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BurgerConstructor, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","styles","axios","AppHeader","BurgerIngredients","BurgerConstructor","jsxDEV","_jsxDEV","App","_s","data","setData","apiUrl","checkResponse","res","ok","json","Promise","reject","status","config","method","url","headers","then","response","_response$data","JSON","parse","stringify","catch","error","console","log","className","app","children","fileName","_jsxFileName","lineNumber","columnNumber","container","_c","$RefreshReg$"],"sources":["/Users/nikitastankovic/Desktop/Yandex.practicum/dev/stellar-burgers/src/components/app/app.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\"; // Импортируем PropTypes\nimport styles from \"./app.module.css\";\nimport axios from \"axios\";\nimport AppHeader from \"../AppHeader/AppHeader\";\nimport BurgerIngredients from \"../BurgerIngredients/BurgerIngredients\";\nimport BurgerConstructor from \"../BurgerConstructor/BurgerConstructor\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  const apiUrl = \"https://norma.nomoreparties.space/api/ingredients\";\n\n  function checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    // если ошибка, отклоняем промис\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  useEffect(() => {\n    const config = {\n      method: \"get\",\n      url: apiUrl,\n      headers: {},\n    };\n\n    axios(config)\n    .then(function (response) {\n      const data = JSON.parse(JSON.stringify(response?.data?.data));\n\n      return data ?? [];\n    })\n    .then((data) => {\n      // Выполните операции с данными здесь\n      setData(data);\n\n      // Затем вызовите checkResponse для проверки успешности выполнения запроса\n      return checkResponse();\n    })\n    .catch(function (error) {\n      console.log(error);\n      // Если требуется дополнительная обработка ошибки, добавьте её здесь\n    });\n}, []);\n\n\n\n\n\n\n  //Стоит добавить проверку успешности выполнения с помощью res.ok так как catch ловит\n  //только ошибки в самом запросе, но если сервер вернет к примеру 400, то ее catch не поймает.\n  //Теперь код более корректно обрабатывает успешное выполнение запроса и ошибки.\n\n  return (\n    <div className={styles.app}>\n      <AppHeader />\n      <main className={styles.container}>\n        {/* Передаем свойство \"data\" компонентам */}\n        <BurgerIngredients data={data} />\n        <BurgerConstructor data={data} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY,CAAC,CAAC;AACpC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,iBAAiB,MAAM,wCAAwC;AACtE,OAAOC,iBAAiB,MAAM,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMc,MAAM,GAAG,mDAAmD;EAElE,SAASC,aAAaA,CAACC,GAAG,EAAE;IAC1B,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,EAAE;IACnB;IACA;IACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;EAChD;EAEApB,SAAS,CAAC,MAAM;IACd,MAAMqB,MAAM,GAAG;MACbC,MAAM,EAAE,KAAK;MACbC,GAAG,EAAEV,MAAM;MACXW,OAAO,EAAE,CAAC;IACZ,CAAC;IAEDrB,KAAK,CAACkB,MAAM,CAAC,CACZI,IAAI,CAAC,UAAUC,QAAQ,EAAE;MAAA,IAAAC,cAAA;MACxB,MAAMhB,IAAI,GAAGiB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACJ,QAAQ,aAARA,QAAQ,wBAAAC,cAAA,GAARD,QAAQ,CAAEf,IAAI,cAAAgB,cAAA,uBAAdA,cAAA,CAAgBhB,IAAI,CAAC,CAAC;MAE7D,OAAOA,IAAI,aAAJA,IAAI,cAAJA,IAAI,GAAI,EAAE;IACnB,CAAC,CAAC,CACDc,IAAI,CAAEd,IAAI,IAAK;MACd;MACAC,OAAO,CAACD,IAAI,CAAC;;MAEb;MACA,OAAOG,aAAa,EAAE;IACxB,CAAC,CAAC,CACDiB,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB;IACF,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAOJ;EACA;EACA;;EAEA,oBACExB,OAAA;IAAK2B,SAAS,EAAEjC,MAAM,CAACkC,GAAI;IAAAC,QAAA,gBACzB7B,OAAA,CAACJ,SAAS;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACbjC,OAAA;MAAM2B,SAAS,EAAEjC,MAAM,CAACwC,SAAU;MAAAL,QAAA,gBAEhC7B,OAAA,CAACH,iBAAiB;QAACM,IAAI,EAAEA;MAAK;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACjCjC,OAAA,CAACF,iBAAiB;QAACK,IAAI,EAAEA;MAAK;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV;AAAC/B,EAAA,CA1DQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AA4DZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}